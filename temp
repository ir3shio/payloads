javascript:(function(){const changeUrl = () => {const domain = new URL(window.location.href).hostname;window.location.href=`https://web.archive.org/cdx/search/cdx?url=*.${domain}&fl=original&collapse=urlkey`;};changeUrl();})();


javascript:(function(){var scripts=document.getElementsByTagName("script"),regex=/(?%3C=(\%22|\%27|\`))\/[a-zA-Z0-9_?&=\/\-\#\.]*(?=(\%22|\'|\%60))/g;const%20results=new%20Set;for(var%20i=0;i%3Cscripts.length;i++){var%20t=scripts[i].src;%22%22!=t&&fetch(t).then(function(t){return%20t.text()}).then(function(t){var%20e=t.matchAll(regex);for(let%20r%20of%20e)results.add(r[0])}).catch(function(t){console.log(%22An%20error%20occurred:%20%22,t)})}var%20pageContent=document.documentElement.outerHTML,matches=pageContent.matchAll(regex);for(const%20match%20of%20matches)results.add(match[0]);function%20writeResults(){results.forEach(function(t){document.write(t+%22%3Cbr%3E%22)})}setTimeout(writeResults,3e3);})();

https://gtfobins.github.io

https://web.archive.org/web/20210602164925/https://docs.google.com/document/d/1EIMxZ2_FD47aEYeG2JkOiRnIe8hBY_k0cuYgcjJeUV8/edit

https://rules.sonarsource.com/

https://alike-lantern-72d.notion.site/Web-Application-Penetration-Testing-Checklist-4792d95add7d4ffd85dd50a5f50659c6

https://erev0s.com/tools/web-application-assessment-check-list/






























https://gist.github.com/Uni
leve
rSec
urity/71
50b64
4c4b70
55b114378f



ac198021c










import random
import requests


def send_request(proxy):
    # Set the request headers
    headers = {
        "Content-Type": "text/plain;charset=UTF-8",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.5790.171 Safari/537.36",
        "Accept": "*/*",
        "Origin": "https://strawpoll.com",
        "Referer": "https://strawpoll.com/"
    }

    # Set the request body
    request_body = '''{"pv":"1326be7a-6759-11ee-812b-f8a8d7107e14","v":{"id":"","name":"","pollVotes":[{"id":"BJnXR20LKZv","value":1},{"id":"2ayLrq06qg4","value":1}],"voteType":"add","token":"","isEmbed":false},"h":false,"ht":false,"token":null}'''

    # Set the proxy
    proxies = {"http": proxy, "https": proxy}

    # Send the request
    try:
        response = requests.post("https://api.strawpoll.com/v3/polls/w4nWrXvDxyA/vote", headers=headers, data=request_body, proxies=proxies, verify=False)
        # Print the response status code
        print(response.text)

    except ConnectionError as e:
        # Handle the exception
        print("Unable: {}".format(proxy))

def read_proxy_list():
    """Reads a proxy list from the specified file."""

    proxy_list = []
    with open("proxy.txt", "r") as f:
        for line in f:
            proxy = line.strip()
            if proxy:
                proxy_list.append(proxy)

    return proxy_list

proxy_list = read_proxy_list()

# Iterate through the proxy list and send the request using each proxy
for proxy in proxy_list:
    send_request(proxy)
